//__________________________________________

author = "STAF|IndeedPete";
OnLoadName = "STAF|COIN (Altis)";
briefingName = "STAF|COIN (Altis) (RC)";
onLoadMission = "Taskforce COIN is deployed at F.O.B. Moneypenny in order to take on a counter insurgency campaign against a criminal network of local insurgents and foreign mercenaries.";
onLoadIntroTime = false;
onLoadMissionTime = false;
disabledAI = 1;

respawn = "BASE";
respawnDelay = 0;
respawnDelayMASH = 180;
respawnMessageMASH = "You died and have to stay in the M.A.S.H. to recover.";
respawnDialog = 0;
respawnOnStart = -1;

showGPS = 1;
loadScreen = "pics\COIN_Overview.paa";
overviewPicture = "pics\COIN_Overview.paa";
enableDebugConsole = 1;
joinUnassigned = false;
disableChannels[] = {1,2,3,4,5,6};
enableItemsDropping = 0;

class Header 
{
	gameType = COOP;
	minPlayers = 2;
	maxPlayers = 61;
};

corpseManagerMode = 1;
corpseLimit = 30;
corpseRemovalMinTime = 360;
corpseRemovalMaxTime = 1200;

wreckManagerMode = 1;
wreckLimit = 15;
wreckRemovalMinTime = 360;
wreckRemovalMaxTime = 1200;

//__________________________________________
#include "cfg\defines.hpp"
#include "cfg\missionConversations.hpp"
#include "cfg\vehicleLoadouts.hpp"
#include "cfg\zones.hpp"
#include "cfg\ORBAT.hpp"

#include "cfg\conv\dialogs.hpp"
//#include "cfg\shop\dialogs.hpp"
#include "cfg\shop\meta.hpp"
#include "cfg\shop\missions.hpp"
#include "cfg\shop\personnel.hpp"
#include "cfg\shop\weapons.hpp"
#include "cfg\shop\magazines.hpp"
#include "cfg\shop\items.hpp"
#include "cfg\shop\uniforms.hpp"
#include "cfg\shop\campEnhancements.hpp"
#include "cfg\shop\campVehicles.hpp"
#include "cfg\shop\stocks.hpp"

//__________________________________________

class CfgFunctions
{
	#include "cfg\functions.hpp"
	#include "EPD\EPDcfgFunctions.hpp"
};

//__________________________________________

class Params
{
	class Persistence
	{
		title = "Persistence (Whether the game automatically saves and loads progress to and from an iniDB file.)";
		texts[] = {"No", "Yes"};
		values[] = {0, 1};
		default = 1;
	};
	
	class DayTime
	{
		title = "Time of Day (Will be overwritten by persistence!)";
		texts[] = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23"};
		values[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23};
		default = 6;
	};
	/*
	class Weather
	{
		title = "Weather Conditions (Will be overwritten by persistence!)";
		texts[] = {"Clear", "Cloudy", "Rainy", "Random", "Default"};
		values[] = {0, 1, 2, 3, 4};
		default = 3;
	};
	*/
};

class CfgRemoteExec
{ 
	class Commands
	{
		class deleteMarker
		{ 
			allowedTargets = 0;
			jip = 1;
		};
		
		class switchMove
		{ 
			allowedTargets = 0;
			jip = 1;
		};
		
		class systemChat
		{ 
			allowedTargets = 0;
			jip = 1;
		};
	};
};

class Extended_PostInit_EventHandlers
{
	//RYD_INC_Post_Init = "RYD_INC_Post_Init_Var = [] spawn IP_fnc_rydIncognito";
};

class CfgCommunicationMenu
{
	class INCSwitch
	{
		text = "Switch Incognito difficulty";
		submenu = "";
		expression = "nul = [] spawn RYD_INC_Switch;";
		icon = "";
		cursor = "";
		enable = 0;
		removeAfterExpressionCall = 0;
	};
};

//__________________________________________

class CfgNotifications
{
	class ZoneCleared
	{
		title = "ZONE CLEARED";
		iconPicture = "\a3\ui_f\data\map\Markers\Military\flag_ca.paa";
		description = "%1";
		color[] = {1,1,1,1};
		//color[] = {"(profileNamespace getVariable ['Map_BLUFOR_R',0])","(profileNamespace getVariable ['Map_BLUFOR_G',1])","(profileNamespace getVariable ['Map_BLUFOR_B',1])","(profileNamespace getVariable ['Map_BLUFOR_A',0.8])"};
		priority = 7;
	};	
	class deploy1
	{
		title = "MHQ Deployment"; // Tile displayed as text on black background. Filled by arguments.
		description = "MHQ 1 has been deployed"; // Brief description displayed as structured text. Colored by "color", filled by arguments
		duration = 5; // How many seconds will the notification be displayed
		priority = 7; // Priority; higher number = more important; tasks in queue are selected by priority
	};
	class deploy2
	{
		title = "MHQ Deployment"; // Tile displayed as text on black background. Filled by arguments.
		description = "MHQ 2 has been deployed"; // Brief description displayed as structured text. Colored by "color", filled by arguments
		duration = 5; // How many seconds will the notification be displayed
		priority = 7; // Priority; higher number = more important; tasks in queue are selected by priority
	};
	class deploy3
	{
		title = "MHQ Deployment"; // Tile displayed as text on black background. Filled by arguments.
		description = "MHQ 3 has been deployed"; // Brief description displayed as structured text. Colored by "color", filled by arguments
		duration = 5; // How many seconds will the notification be displayed
		priority = 7; // Priority; higher number = more important; tasks in queue are selected by priority
	};
	class undeploy1
	{
		title = "MHQ Disassemblement"; // Tile displayed as text on black background. Filled by arguments.
		description = "MHQ 1 has been disassembled"; // Brief description displayed as structured text. Colored by "color", filled by arguments
		duration = 5; // How many seconds will the notification be displayed
		priority = 7; // Priority; higher number = more important; tasks in queue are selected by priority
	};
	class undeploy2
	{
		title = "MHQ Disassemblement"; // Tile displayed as text on black background. Filled by arguments.
		description = "MHQ 2 has been disassembled"; // Brief description displayed as structured text. Colored by "color", filled by arguments
		duration = 5; // How many seconds will the notification be displayed
		priority = 7; // Priority; higher number = more important; tasks in queue are selected by priority
	};
	class undeploy3
	{
		title = "MHQ Disassemblement"; // Tile displayed as text on black background. Filled by arguments.
		description = "MHQ 3 has been disassembled"; // Brief description displayed as structured text. Colored by "color", filled by arguments
		duration = 5; // How many seconds will the notification be displayed
		priority = 7; // Priority; higher number = more important; tasks in queue are selected by priority
	};
};